 .name fcn.0000dcb0
 .offset 000000000000dcb0
 .file cvtsudoers
LABEL177:
 push r15
 push r14
 mov r14d, ecx
 push r13
 mov r13, r9
 push r12
 mov r12, rdx
 push rbp
 mov rbp, rdi
 lea rdi, [rip + CONST]
 push rbx
 sub rsp, CONST
 lea rdx, [rip + CONST]
 mov qword [rsp], rsi
 lea rsi, [rip + CONST]
 mov r15d, dword [rdx + CONST]
 mov edx, CONST
 mov dword [rsp + CONST], r8d
 mov byte [rsp + CONST], r8b
 mov ecx, r15d
 call CONST
 cmp r14d, CONST
 cjmp LABEL22
 cjmp LABEL23
 cmp r14d, CONST
 cjmp LABEL25
 cmp r14d, CONST
 cjmp LABEL27
 lea rax, [rip + CONST]
 lea rdx, [rip + CONST]
 lea rsi, [rip + CONST]
 mov rdi, rbp
 mov rcx, qword [rax + CONST]
 lea rax, [rip + CONST]
 test rcx, rcx
 cmove rcx, rax
 cmp byte [rsp + CONST], CONST
 cmove rdx, rax
 xor eax, eax
 call CONST
LABEL90:
 mov rdi, rbp
 call CONST
 mov ecx, r15d
 mov edx, CONST
 lea rsi, [rip + CONST]
 xor eax, CONST
 lea rdi, [rip + CONST]
 movzx r8d, al
 mov r12d, r8d
 call CONST
 add rsp, CONST
 mov eax, r12d
 pop rbx
 pop rbp
 pop r12
 pop r13
 pop r14
 pop r15
 ret
LABEL23:
 cmp r14d, CONST
 cjmp LABEL60
 cmp r14d, CONST
 cjmp LABEL27
 cmp dword [rsp + CONST], CONST
 cjmp LABEL64
LABEL27:
 cmp byte [r12], CONST
 cjmp LABEL66
LABEL228:
 lea rsi, [rip + CONST]
 mov rdi, r12
 call CONST
 test rax, rax
 cjmp LABEL71
LABEL206:
 cmp byte [rsp + CONST], CONST
 lea rax, [rip + CONST]
 mov rdi, rbp
 lea rdx, [rip + CONST]
 lea rsi, [rip + CONST]
 cmove rdx, rax
 xor eax, eax
 call CONST
 mov rdi, rbp
 mov rcx, r12
 xor eax, eax
 lea rdx, [rip + CONST]
 lea rsi, [rip + CONST]
 call CONST
 lea rsi, [rip + CONST]
 mov rdi, rbp
 xor eax, eax
 call CONST
 jmp LABEL90
LABEL60:
 mov r13, qword [r12 + CONST]
 test r13, r13
 cjmp LABEL93
 nop word [rax + rax]
LABEL111:
 cmp qword [r13], CONST
 mov edi, dword [r13 + CONST]
 lea rax, [rip + CONST]
 lea rbx, [rip + CONST]
 cmovne rbx, rax
 mov r14, qword [r13 + CONST]
 call CONST
 lea rsi, [rip + CONST]
 mov rdi, rbp
 mov rdx, rax
 mov r8, rbx
 mov rcx, r14
 xor eax, eax
 call CONST
 mov r13, qword [r13]
 test r13, r13
 cjmp LABEL111
LABEL93:
 cmp byte [rsp + CONST], CONST
 cjmp LABEL113
LABEL151:
 mov rcx, qword [r12]
 lea rax, [rip + CONST]
 mov rdi, rbp
 lea rdx, [rip + CONST]
 lea rsi, [rip + CONST]
 test rcx, rcx
 cmove rcx, rax
 xor eax, eax
 call CONST
 cmp qword [r12 + CONST], CONST
 cjmp LABEL90
 mov rdi, rbp
 lea rsi, [rip + CONST]
 xor eax, eax
 call CONST
 mov rcx, qword [r12 + CONST]
 mov rdi, rbp
 xor eax, eax
 lea rdx, [rip + CONST]
 lea rsi, [rip + CONST]
 call CONST
 jmp LABEL90
LABEL71:
 cmp byte [rsp + CONST], CONST
 lea rax, [rip + CONST]
 mov r8, r12
 mov rdi, rbp
 lea rcx, [rip + CONST]
 lea rdx, [rip + CONST]
 cmove rcx, rax
 lea rsi, [rip + CONST]
 xor eax, eax
 call CONST
 jmp LABEL90
LABEL113:
 lea rsi, [rip + CONST]
 mov rdi, rbp
 xor eax, eax
 call CONST
 jmp LABEL151
LABEL64:
 mov edx, dword [rsp + CONST]
 mov rdi, qword [rsp]
 mov rsi, r12
 call CONST
 mov r14, rax
 test rax, rax
 cjmp LABEL27
 mov r12, qword [rax + CONST]
 lea rbx, [rip + CONST]
 test r12, r12
 cjmp LABEL162
LABEL184:
 cmp byte [rsp + CONST], CONST
 movzx eax, word [r12 + CONST]
 cjmp LABEL165
LABEL192:
 xor r8d, r8d
 test ax, ax
 sete r8b
LABEL196:
 sub rsp, CONST
 mov rdx, qword [r12 + CONST]
 mov r9, r13
 mov rdi, rbp
 mov eax, dword [rsp + CONST]
 movsx ecx, word [r12 + CONST]
 push rax
 mov rsi, qword [rsp + CONST]
 call LABEL177
 mov r12, qword [r12]
 pop rax
 pop rdx
 test r12, r12
 cjmp LABEL162
 cmp qword [r14 + CONST], r12
 cjmp LABEL184
 xor eax, eax
 mov rdx, r13
 mov rsi, rbx
 mov rdi, rbp
 call CONST
 cmp byte [rsp + CONST], CONST
 movzx eax, word [r12 + CONST]
 cjmp LABEL192
LABEL165:
 xor r8d, r8d
 test ax, ax
 setne r8b
 jmp LABEL196
LABEL162:
 mov rdi, r14
 call CONST
 jmp LABEL90
LABEL22:
 lea rsi, [rip + CONST]
 mov rdi, r12
 call CONST
 test rax, rax
 cjmp LABEL204
 cmp byte [r12], CONST
 cjmp LABEL206
 lea rdi, [r12 + CONST]
 lea rsi, [rip + CONST]
 call CONST
 cmp byte [r12 + rax + CONST], CONST
 cjmp LABEL211
 jmp LABEL206
LABEL25:
 test r12, r12
 cjmp LABEL60
 cmp byte [rsp + CONST], CONST
 lea rax, [rip + CONST]
 mov rdi, rbp
 lea rdx, [rip + CONST]
 lea rsi, [rip + CONST]
 cmove rdx, rax
 xor eax, eax
 call CONST
 jmp LABEL90
LABEL66:
 lea rdi, [r12 + CONST]
 lea rsi, [rip + CONST]
 call CONST
 cmp byte [r12 + rax + CONST], CONST
 cjmp LABEL228
LABEL211:
 cmp byte [rsp + CONST], CONST
 lea rax, [rip + CONST]
 mov rcx, r12
 mov rdi, rbp
 lea rdx, [rip + CONST]
 lea rsi, [rip + CONST]
 cmove rdx, rax
 xor eax, eax
 call CONST
 jmp LABEL90
LABEL204:
 cmp byte [r12 + CONST], CONST
 cjmp LABEL240
 lea rdx, [rip + CONST]
 mov rdi, rbp
 xor eax, eax
 add r12, CONST
 lea rsi, [rip + CONST]
 call CONST
 jmp LABEL27
LABEL240:
 lea rdx, [rip + CONST]
 lea rsi, [rip + CONST]
 mov rdi, rbp
 add r12, CONST
 call CONST
 jmp LABEL27
