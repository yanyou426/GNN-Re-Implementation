 .name fcn.00007d80
 .offset 0000000000007d80
 .file shred
 push r15
 push r14
 push r13
 push r12
 push rbp
 push rbx
 sub rsp, CONST
 mov rax, qword fs:[CONST]
 mov qword [rsp + CONST], rax
 xor eax, eax
 test rsi, rsi
 cjmp LABEL11
 mov r13, rdi
 mov rbx, rsi
 test rdi, rdi
 cjmp LABEL15
 lea rsi, [rip + CONST]
 call CONST
 mov rbp, rax
 test rax, rax
 cjmp LABEL20
 mov edi, CONST
 call CONST
 cmp rbx, CONST
 mov ecx, CONST
 mov rdi, rbp
 mov r12, rax
 mov qword [rax], rbp
 lea rax, [rip + CONST]
 cmovbe rcx, rbx
 mov qword [r12 + CONST], rax
 lea rsi, [r12 + CONST]
 xor edx, edx
 mov qword [r12 + CONST], r13
 call CONST
LABEL54:
 mov rax, qword [rsp + CONST]
 sub rax, qword fs:[CONST]
 cjmp LABEL37
 add rsp, CONST
 mov rax, r12
 pop rbx
 pop rbp
 pop r12
 pop r13
 pop r14
 pop r15
 ret
LABEL11:
 mov edi, CONST
 call CONST
 mov qword [rax], CONST
 mov r12, rax
 lea rax, [rip + CONST]
 mov qword [r12 + CONST], rax
 mov qword [r12 + CONST], CONST
 jmp LABEL54
LABEL15:
 mov edi, CONST
 call CONST
 xor esi, esi
 lea rdi, [rip + CONST]
 mov qword [rax], CONST
 mov r12, rax
 lea rax, [rip + CONST]
 mov qword [r12 + CONST], rax
 xor eax, eax
 lea rbp, [r12 + CONST]
 mov qword [r12 + CONST], CONST
 mov qword [r12 + CONST], CONST
 call CONST
 mov r15d, eax
 test eax, eax
 cjmp LABEL70
 lea r15, [rsp + CONST]
 xor esi, esi
 mov r13d, CONST
 mov rdi, r15
 call CONST
 movdqa xmm0, xmmword [rsp + CONST]
 movups xmmword [r12 + CONST], xmm0
 call CONST
 mov dword [rsp + CONST], eax
 mov dword [r12 + CONST], eax
LABEL196:
 mov ebx, CONST
 mov eax, CONST
 sub rbx, r13
 cmp rbx, CONST
 cmova rbx, rax
 call CONST
 lea rsi, [rbp + r13]
 mov dword [rsp + CONST], eax
 mov edi, ebx
 test ebx, ebx
 cjmp LABEL91
 xor eax, eax
LABEL98:
 mov edx, eax
 add eax, CONST
 movzx ecx, byte [r15 + rdx]
 mov byte [rsi + rdx], cl
 cmp eax, edi
 cjmp LABEL98
LABEL91:
 add rbx, r13
 cmp rbx, CONST
 cjmp LABEL101
 mov r13d, CONST
 mov eax, CONST
 sub r13, rbx
 cmp r13, CONST
 cmova r13, rax
 call CONST
 lea rsi, [rbp + rbx]
 mov dword [rsp + CONST], eax
 mov edi, r13d
 test r13d, r13d
 cjmp LABEL112
 xor eax, eax
LABEL119:
 mov edx, eax
 add eax, CONST
 movzx ecx, byte [r15 + rdx]
 mov byte [rsi + rdx], cl
 cmp eax, edi
 cjmp LABEL119
LABEL112:
 add rbx, r13
 cmp rbx, CONST
 cjmp LABEL101
 call CONST
 mov edx, CONST
 lea rsi, [rbp + rbx]
 mov dword [rsp + CONST], eax
 mov eax, CONST
 sub rax, rbx
 cmp rax, CONST
 cmova rax, rdx
 mov edi, eax
 test eax, eax
 cjmp LABEL101
 xor eax, eax
LABEL140:
 mov edx, eax
 add eax, CONST
 movzx ecx, byte [r15 + rdx]
 mov byte [rsi + rdx], cl
 cmp eax, edi
 cjmp LABEL140
 jmp LABEL101
LABEL70:
 cmp rbx, CONST
 mov rdx, rbx
 mov edi, eax
 mov rsi, rbp
 mov r14d, CONST
 mov ecx, CONST
 cmova rdx, r14
 call CONST
 mov edi, r15d
 mov rbx, rax
 call CONST
 cmp rbx, CONST
 cjmp LABEL154
LABEL101:
 mov rdi, rbp
 call CONST
 jmp LABEL54
LABEL20:
 xor r12d, r12d
 jmp LABEL54
LABEL37:
 call CONST
LABEL154:
 test rbx, rbx
 mov rcx, r14
 lea r15, [rsp + CONST]
 mov eax, CONST
 cmovs rbx, r13
 mov rdi, r15
 sub rcx, rbx
 lea r13, [rbp + rbx]
 cmp rcx, CONST
 cmova rcx, rax
 xor esi, esi
 mov qword [rsp + CONST], rcx
 add rbx, rcx
 call CONST
 mov rcx, qword [rsp + CONST]
 mov rdi, r13
 mov rsi, r15
 mov ecx, ecx
 rep movsb byte [rdi], byte [rsi]
 cmp rbx, CONST
 cjmp LABEL101
 sub r14, rbx
 mov eax, CONST
 cmp r14, CONST
 mov r13, r14
 cmova r13, rax
 call CONST
 mov rsi, r15
 mov dword [rsp + CONST], eax
 mov ecx, r13d
 lea rax, [rbp + rbx]
 add r13, rbx
 mov rdi, rax
 rep movsb byte [rdi], byte [rsi]
 cmp r13, CONST
 cjmp LABEL196
 jmp LABEL101
