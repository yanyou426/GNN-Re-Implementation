 .name fcn.00016cb0
 .offset 0000000000016cb0
 .file cvtsudoers
 lea rax, [rip + CONST]
 push r12
 mov edx, CONST
 push rbp
 mov rbp, rdi
 lea rdi, [rip + CONST]
 push rbx
 mov r12d, dword [rax + CONST]
 mov rbx, rsi
 lea rsi, [rip + CONST]
 mov ecx, r12d
 call CONST
 movzx eax, word [rbx + CONST]
 sub ax, CONST
 cmp ax, CONST
 cjmp LABEL15
 lea rdx, [rip + CONST]
 movzx eax, ax
 movsxd rax, dword [rdx + rax*CONST]
 add rax, rdx
 jmp rax
 lea rax, [rip + CONST]
 mov rdx, qword [rbx + CONST]
 mov rdi, rbp
 mov rsi, qword [rax + CONST]
 call CONST
 cmp eax, CONST
 cjmp LABEL27
LABEL15:
 xor r8d, r8d
 mov ecx, r12d
 mov edx, CONST
 lea rsi, [rip + CONST]
 lea rdi, [rip + CONST]
 call CONST
 xor eax, eax
LABEL54:
 pop rbx
 pop rbp
 pop r12
 ret
 mov rsi, qword [rbx + CONST]
 xor r8d, r8d
 xor ecx, ecx
 xor edx, edx
 mov rdi, rbp
 call CONST
 cmp eax, CONST
 cjmp LABEL15
 mov r8d, CONST
 mov ecx, r12d
 mov edx, CONST
 lea rsi, [rip + CONST]
 lea rdi, [rip + CONST]
 call CONST
 mov eax, CONST
 jmp LABEL54
 mov rsi, qword [rbx + CONST]
 xor ecx, ecx
 xor edx, edx
 mov rdi, rbp
 call CONST
 cmp eax, CONST
 cjmp LABEL15
 mov r8d, CONST
 mov ecx, r12d
 mov edx, CONST
 lea rsi, [rip + CONST]
 lea rdi, [rip + CONST]
 call CONST
 mov eax, CONST
 jmp LABEL54
 mov ecx, r12d
 mov r8d, CONST
 mov edx, CONST
 lea rsi, [rip + CONST]
 lea rdi, [rip + CONST]
 call CONST
 pop rbx
 mov eax, CONST
 pop rbp
 pop r12
 ret
 lea rax, [rip + CONST]
 mov rdx, qword [rbx + CONST]
 mov rdi, rbp
 mov rsi, qword [rax + CONST]
 call CONST
 cmp eax, CONST
 cjmp LABEL15
 mov r8d, CONST
 mov ecx, r12d
 mov edx, CONST
 lea rsi, [rip + CONST]
 lea rdi, [rip + CONST]
 call CONST
 mov eax, CONST
 jmp LABEL54
LABEL27:
 mov r8d, CONST
 mov ecx, r12d
 mov edx, CONST
 lea rsi, [rip + CONST]
 lea rdi, [rip + CONST]
 call CONST
 mov eax, CONST
 jmp LABEL54
