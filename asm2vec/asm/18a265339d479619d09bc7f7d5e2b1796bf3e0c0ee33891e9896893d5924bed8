 .name fcn.00019d40
 .offset 0000000000019d40
 .file curl
 push r15
 push r14
 push r13
 push r12
 push rbp
 push rbx
 sub rsp, CONST
 mov rbx, qword [rip + CONST]
 mov qword [rsp + CONST], rcx
 mov rax, qword fs:[CONST]
 mov qword [rsp + CONST], rax
 xor eax, eax
 mov byte [rsp + CONST], CONST
 test rbx, rbx
 cjmp LABEL14
 mov r14, rdi
 mov r12, rsi
 mov rbp, rdx
 mov r13, r8
 jmp LABEL19
LABEL73:
 add qword [rip + CONST], CONST
 mov byte [rbx + CONST], CONST
 mov byte [r13], CONST
LABEL31:
 mov rbx, qword [rbx]
 test rbx, rbx
 cjmp LABEL14
LABEL19:
 mov rax, qword [rip + CONST]
 cmp qword [r14 + CONST], rax
 cjmp LABEL28
 cmp byte [rbx + CONST], CONST
 mov byte [rsp + CONST], CONST
 cjmp LABEL31
 cmp qword [rbx + CONST], CONST
 cjmp LABEL33
 xor edi, edi
 call CONST
 cmp rax, qword [rbx + CONST]
 cjmp LABEL37
LABEL33:
 mov rsi, rbx
 mov rdi, r14
 call CONST
 test eax, eax
 cjmp LABEL42
 movzx edx, byte [r14 + CONST]
 mov rdi, qword [rbx + CONST]
 mov esi, CONST
 xor eax, eax
 xor edx, CONST
 movzx edx, dl
 call CONST
 mov rdi, qword [rbx + CONST]
 mov rdx, rbx
 xor eax, eax
 mov esi, CONST
 call CONST
 mov rdi, qword [rbx + CONST]
 mov esi, CONST
 xor eax, eax
 lea rdx, [rip + CONST]
 call CONST
 mov rdi, qword [rbx + CONST]
 mov esi, CONST
 xor eax, eax
 mov rdx, rbx
 call CONST
 mov rsi, qword [rbx + CONST]
 mov rdi, r12
 call CONST
 test eax, eax
 cjmp LABEL69
 mov rsi, qword [r14 + CONST]
 mov byte [rsp + CONST], CONST
 test rsi, rsi
 cjmp LABEL73
 lea r15, [rsp + CONST]
LABEL87:
 mov rcx, r15
 mov rdx, rbp
 mov rdi, r14
 call CONST
 test eax, eax
 cjmp LABEL42
 cmp byte [rsp + CONST], CONST
 cjmp LABEL73
 mov rax, qword [r14 + CONST]
 mov rsi, qword [rax + CONST]
 mov qword [r14 + CONST], rsi
 test rsi, rsi
 cjmp LABEL87
 jmp LABEL73
LABEL37:
 mov rbx, qword [rbx]
 mov byte [rsp + CONST], CONST
 test rbx, rbx
 cjmp LABEL19
 nop dword [rax]
LABEL14:
 mov rax, qword [rsp + CONST]
 movzx ecx, byte [rsp + CONST]
 mov byte [rax], cl
 xor eax, eax
LABEL42:
 mov rcx, qword [rsp + CONST]
 sub rcx, qword fs:[CONST]
 cjmp LABEL100
 add rsp, CONST
 pop rbx
 pop rbp
 pop r12
 pop r13
 pop r14
 pop r15
 ret
LABEL28:
 mov rax, qword [rsp + CONST]
 mov byte [rsp + CONST], CONST
 movzx ecx, byte [rsp + CONST]
 mov byte [rax], cl
 xor eax, eax
 jmp LABEL42
LABEL69:
 mov eax, CONST
 jmp LABEL42
LABEL100:
 call CONST
