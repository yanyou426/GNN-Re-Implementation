 .name fcn.0001d660
 .offset 000000000001d660
 .file curl
 push r15
 push r14
 push r13
 mov r13, rdx
 push r12
 mov r12, r8
 push rbp
 mov rbp, rdi
 push rbx
 mov ebx, r9d
 sub rsp, CONST
 mov qword [rsp], rcx
 mov rax, qword fs:[CONST]
 mov qword [rsp + CONST], rax
 xor eax, eax
 lea rax, [rsp + CONST]
 mov dword [rsp + CONST], CONST
 mov qword [rsp + CONST], rax
 lea rax, [rsp + CONST]
 mov qword [rsp + CONST], rax
 cmp r9d, CONST
 cjmp LABEL21
 lea rax, [rsp + CONST]
 mov r15, qword [rsp + CONST]
 lea r14, [rip + CONST]
 mov qword [rsp + CONST], rax
 lea rsi, [rip + CONST]
 jmp LABEL27
LABEL35:
 mov rsi, qword [r14 + CONST]
 add r14, CONST
 test rsi, rsi
 cjmp LABEL31
LABEL27:
 mov rdi, r12
 call CONST
 test eax, eax
 cjmp LABEL35
 mov rax, qword [r14 + CONST]
 mov r14, rax
LABEL175:
 lea r8, [rsp + CONST]
 mov rcx, r15
 mov esi, CONST
 xor eax, eax
 mov rdi, r8
 lea rdx, [rip + CONST]
 mov qword [rsp + CONST], r8
 call CONST
 mov rdi, rbp
 mov rdx, r15
 mov esi, ebx
 xor eax, eax
 call CONST
 mov ebp, eax
 cmp r14, r15
 cjmp LABEL53
LABEL170:
 mov r8, qword [rsp + CONST]
 xor r9d, r9d
 xor r10d, r10d
 xor r15d, r15d
LABEL130:
 mov r13, qword [r13 + CONST]
 test r13, r13
 cjmp LABEL60
 cmp r10b, CONST
 cjmp LABEL53
 test ebp, ebp
 cjmp LABEL53
 test r15b, r15b
 cjmp LABEL66
 test r9b, r9b
 cjmp LABEL68
 mov rsi, CONST
 cmp ebx, CONST
 cjmp LABEL71
 mov rax, qword [rsp]
 mov rsi, qword [rax + CONST]
LABEL71:
 mov rdi, r8
 call CONST
 mov r13, rax
 test rax, rax
 cjmp LABEL78
 mov rcx, rax
 mov rdx, r12
 lea rsi, [rip + CONST]
 xor eax, eax
 lea rdi, [rip + CONST]
 call CONST
 mov ebp, eax
 nop word [rax + rax]
LABEL60:
 mov rdi, r13
 call CONST
 mov rax, qword [rsp + CONST]
 sub rax, qword fs:[CONST]
 cjmp LABEL91
 add rsp, CONST
 mov eax, ebp
 pop rbx
 pop rbp
 pop r12
 pop r13
 pop r14
 pop r15
 ret
LABEL21:
 cmp r9d, CONST
 cjmp LABEL102
 mov rdx, qword [rsp + CONST]
 cmp r9d, CONST
 cjmp LABEL105
 test rdx, rdx
 setne r9b
 and r9b, sil
 cjmp LABEL109
 cmp rdx, CONST
 lea rcx, [rip + CONST]
 mov eax, CONST
 setb r10b
 sbb r15d, r15d
 add r15d, CONST
 test rdx, rdx
 cmovne rax, rcx
 mov r8, rax
LABEL185:
 mov rdi, rbp
 mov esi, ebx
 xor eax, eax
 mov byte [rsp + CONST], r9b
 mov byte [rsp + CONST], r10b
 mov qword [rsp + CONST], r8
 call CONST
 mov r8, qword [rsp + CONST]
 movzx r10d, byte [rsp + CONST]
 movzx r9d, byte [rsp + CONST]
 mov ebp, eax
 jmp LABEL130
LABEL102:
 cmp r9d, CONST
 cjmp LABEL132
 mov rdx, qword [rsp + CONST]
 mov ecx, CONST
 lea r8, [rip + CONST]
 mov esi, r9d
 test rdx, rdx
 cmove r8, rcx
 cmp rdx, CONST
 setb r10b
 sbb r15d, r15d
 xor eax, eax
 mov qword [rsp + CONST], r8
 add r15d, CONST
 mov byte [rsp + CONST], r10b
 call CONST
 mov r8, qword [rsp + CONST]
 movzx r10d, byte [rsp + CONST]
 xor r9d, r9d
 mov ebp, eax
 jmp LABEL130
LABEL132:
 mov r15, qword [rsp + CONST]
 lea r8, [rsp + CONST]
 lea rax, [rsp + CONST]
 mov esi, CONST
 mov rdi, r8
 mov qword [rsp + CONST], rax
 xor eax, eax
 lea rdx, [rip + CONST]
 mov rcx, r15
 mov qword [rsp + CONST], r8
 call CONST
 mov rdi, rbp
 mov rdx, r15
 mov esi, ebx
 xor eax, eax
 call CONST
 mov ebp, eax
 test r15, r15
 cjmp LABEL170
 nop word [rax + rax]
LABEL53:
 xor r13d, r13d
 jmp LABEL60
LABEL31:
 xor r14d, r14d
 jmp LABEL175
LABEL105:
 test rdx, rdx
 lea r8, [rip + CONST]
 mov ecx, CONST
 cmove r8, rcx
 xor r9d, r9d
 cmp rdx, CONST
 setb r10b
 sbb r15d, r15d
 add r15d, CONST
 jmp LABEL185
LABEL68:
 mov rcx, r8
 mov rdx, r12
 lea rsi, [rip + CONST]
 xor eax, eax
 lea rdi, [rip + CONST]
 xor r13d, r13d
 call CONST
 mov ebp, eax
 jmp LABEL60
LABEL66:
 mov rcx, r8
 mov rdx, r12
 lea rsi, [rip + CONST]
 xor eax, eax
 lea rdi, [rip + CONST]
 xor r13d, r13d
 call CONST
 mov ebp, eax
 jmp LABEL60
LABEL109:
 mov r8, rdx
 xor r10d, r10d
 xor r15d, r15d
 jmp LABEL185
LABEL78:
 mov ebp, CONST
 jmp LABEL60
LABEL91:
 call CONST
