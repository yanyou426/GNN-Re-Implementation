 .name fcn.00012960
 .offset 0000000000012960
 .file cvtsudoers
 push r15
 push r14
 push r13
 mov r13, rdx
 mov edx, CONST
 push r12
 push rbp
 push rbx
 sub rsp, CONST
 mov qword [rsp + CONST], rsi
 lea rsi, [rip + CONST]
 mov rax, qword fs:[CONST]
 mov qword [rsp + CONST], rax
 xor eax, eax
 lea rax, [rip + CONST]
 mov qword [rsp + CONST], rdi
 lea rdi, [rip + CONST]
 mov r14d, dword [rax + CONST]
 mov ecx, r14d
 call CONST
 mov r15, qword [rsp + CONST]
 mov esi, CONST
 mov rdi, r15
 call CONST
 cmp r15, rax
 cjmp LABEL25
 movzx r8d, byte [rax + CONST]
 mov rbx, rax
 lea rbp, [rax + CONST]
 lea eax, [r8 + CONST]
 test al, CONST
 cjmp LABEL31
 call CONST
 mov r12d, CONST
 mov rcx, rax
LABEL79:
 mov rdx, qword [rcx]
 jmp LABEL36
LABEL42:
 sub rbx, CONST
 cmp r15, rbx
 cjmp LABEL39
LABEL36:
 movzx eax, byte [rbx + CONST]
 test byte [rdx + rax*CONST], CONST
 cjmp LABEL42
LABEL39:
 mov byte [rbx], CONST
 mov rcx, qword [rcx]
 jmp LABEL45
LABEL49:
 add rbp, CONST
LABEL45:
 movzx edx, byte [rbp]
 test byte [rcx + rdx*CONST], CONST
 cjmp LABEL49
 cmp dl, CONST
 cjmp LABEL51
LABEL86:
 mov rax, qword [rsp + CONST]
 mov rsi, qword [rsp + CONST]
 mov r8d, r12d
 mov ecx, r14d
 mov edx, CONST
 lea rdi, [rip + CONST]
 mov qword [rsi], rax
 lea rsi, [rip + CONST]
 mov qword [r13], rbp
 call CONST
 mov rax, qword [rsp + CONST]
 sub rax, qword fs:[CONST]
 cjmp LABEL64
 add rsp, CONST
 mov eax, r12d
 pop rbx
 pop rbp
 pop r12
 pop r13
 pop r14
 pop r15
 ret
LABEL31:
 movsx r12d, r8b
 sub rbx, CONST
 call CONST
 mov rcx, rax
 cmp r15, rbx
 cjmp LABEL79
 jmp LABEL39
LABEL25:
 lea rdi, [rsp + CONST]
 xor ebp, ebp
 call CONST
 xor eax, CONST
 movzx r12d, al
 jmp LABEL86
LABEL51:
 mov rdi, rbp
 call CONST
 add rax, rbp
 cmp rbp, rax
 cjmp LABEL86
 cmp byte [rax + CONST], CONST
 cjmp LABEL86
 mov byte [rax + CONST], CONST
 add rbp, CONST
 jmp LABEL86
LABEL64:
 call CONST
