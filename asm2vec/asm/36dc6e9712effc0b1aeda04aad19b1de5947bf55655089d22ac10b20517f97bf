 .name fcn.000153f0
 .offset 00000000000153f0
 .file cvtsudoers
 push r15
 mov r15, rsi
 lea rsi, [rip + CONST]
 push r14
 push r13
 push r12
 mov r12, rdx
 mov edx, CONST
 push rbp
 mov rbp, rdi
 lea rdi, [rip + CONST]
 push rbx
 mov ebx, ecx
 sub rsp, CONST
 lea rax, [rip + CONST]
 mov dword [rsp + CONST], ecx
 mov eax, dword [rax + CONST]
 mov ecx, eax
 mov dword [rsp], eax
 call CONST
 cmp ebx, CONST
 cjmp LABEL21
 mov r13, qword [r12]
 mov qword [rsp + CONST], r13
 test r13, r13
 cjmp LABEL25
 xor ebx, ebx
 jmp LABEL27
LABEL41:
 mov r13, rax
LABEL27:
 mov r14, qword [r13 + CONST]
 mov rdx, r15
 mov rsi, rbp
 mov rdi, r14
 call CONST
 test eax, eax
 cjmp LABEL35
 cmp byte [r14 + r15], CONST
 cjmp LABEL37
LABEL35:
 mov rax, qword [r13]
 mov rbx, r13
 test rax, rax
 cjmp LABEL41
LABEL25:
 mov esi, dword [rsp + CONST]
 test esi, esi
 cjmp LABEL44
 mov esi, CONST
 mov edi, CONST
 call CONST
 mov r13, rax
 test rax, rax
 cjmp LABEL50
 mov rsi, r15
 mov rdi, rbp
 call CONST
 mov qword [r13 + CONST], rax
 test rax, rax
 cjmp LABEL50
 mov rax, qword [rsp + CONST]
 mov qword [r12], r13
 mov qword [r13], rax
LABEL44:
 mov ecx, dword [rsp]
 mov r8d, CONST
 mov edx, CONST
 lea rsi, [rip + CONST]
 lea rdi, [rip + CONST]
 call CONST
 mov eax, CONST
LABEL123:
 add rsp, CONST
 pop rbx
 pop rbp
 pop r12
 pop r13
 pop r14
 pop r15
 ret
LABEL83:
 mov rax, qword [rbp]
 mov rdi, qword [rbp + CONST]
 mov qword [r12], rax
 call CONST
 mov rdi, rbp
 call CONST
LABEL21:
 mov rbp, qword [r12]
 test rbp, rbp
 cjmp LABEL83
 mov ecx, dword [rsp]
 mov r8d, CONST
 mov edx, CONST
 lea rsi, [rip + CONST]
 lea rdi, [rip + CONST]
 call CONST
 add rsp, CONST
 mov eax, CONST
 pop rbx
 pop rbp
 pop r12
 pop r13
 pop r14
 pop r15
 ret
LABEL37:
 mov edi, dword [rsp + CONST]
 test edi, edi
 cjmp LABEL101
 test rbx, rbx
 cjmp LABEL103
 mov rax, qword [rbx]
 mov rax, qword [rax]
 mov qword [rbx], rax
LABEL115:
 mov rdi, r14
 call CONST
 mov rdi, r13
 call CONST
 jmp LABEL44
LABEL103:
 mov rax, qword [rsp + CONST]
 mov rax, qword [rax]
 mov qword [r12], rax
 jmp LABEL115
LABEL101:
 mov ecx, dword [rsp]
 mov r8d, CONST
 mov edx, CONST
 lea rsi, [rip + CONST]
 lea rdi, [rip + CONST]
 call CONST
 mov eax, CONST
 jmp LABEL123
LABEL50:
 lea rsi, [rip + CONST]
 lea rdi, [rip + CONST]
 call CONST
 lea rsi, [rip + CONST]
 lea rdi, [rip + CONST]
 mov rbx, rax
 call CONST
 mov r15d, dword [rsp]
 lea r9, [rip + CONST]
 mov edx, CONST
 mov r8, rax
 push rax
 mov rdi, r9
 lea rsi, [rip + CONST]
 push rbx
 mov ecx, r15d
 xor eax, eax
 or ecx, CONST
 call CONST
 lea rsi, [rip + CONST]
 lea rdi, [rip + CONST]
 call CONST
 lea rsi, [rip + CONST]
 lea rdi, [rip + CONST]
 mov r12, rax
 call CONST
 mov rdx, r12
 lea rsi, [rip + CONST]
 mov rdi, rax
 xor eax, eax
 call CONST
 mov rdi, r13
 call CONST
 mov ecx, r15d
 mov edx, CONST
 xor r8d, r8d
 lea rsi, [rip + CONST]
 lea rdi, [rip + CONST]
 call CONST
 pop rdx
 xor eax, eax
 pop rcx
 jmp LABEL123
