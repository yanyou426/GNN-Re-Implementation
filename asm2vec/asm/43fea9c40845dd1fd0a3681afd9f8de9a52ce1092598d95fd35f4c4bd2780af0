 .name fcn.00009ae0
 .offset 0000000000009ae0
 .file shred
 push r13
 push r12
 push rbp
 sub rsp, CONST
 mov qword [rsp + CONST], rdx
 mov qword [rsp + CONST], rcx
 mov qword [rsp + CONST], r8
 mov qword [rsp + CONST], r9
 mov rax, qword fs:[CONST]
 mov qword [rsp + CONST], rax
 xor eax, eax
 lea rax, [rsp + CONST]
 mov dword [rsp + CONST], CONST
 mov qword [rsp + CONST], rax
 lea rax, [rsp + CONST]
 mov qword [rsp + CONST], rax
 test esi, esi
 cjmp LABEL17
 cmp esi, CONST
 cjmp LABEL19
 cmp esi, CONST
 cjmp LABEL21
 test esi, esi
 cjmp LABEL23
LABEL35:
 mov eax, dword [rsp + CONST]
 cmp eax, CONST
 cjmp LABEL26
 add rax, qword [rsp + CONST]
LABEL137:
 mov rdx, qword [rax]
 xor eax, eax
 call CONST
 mov r12d, eax
 jmp LABEL32
LABEL21:
 lea eax, [rsi + CONST]
 cmp eax, CONST
 cjmp LABEL35
 lea rdx, [rip + CONST]
 movsxd rax, dword [rdx + rax*CONST]
 add rax, rdx
 jmp rax
LABEL23:
 cmp esi, CONST
 cjmp LABEL35
 lea rcx, [rip + CONST]
 mov edx, esi
 movsxd rax, dword [rcx + rdx*CONST]
 add rax, rcx
 jmp rax
LABEL17:
 mov rax, qword [rsp + CONST]
 xor esi, esi
 mov edx, dword [rax + CONST]
 xor eax, eax
 call CONST
 mov r12d, eax
LABEL32:
 mov rax, qword [rsp + CONST]
 sub rax, qword fs:[CONST]
 cjmp LABEL55
 add rsp, CONST
 mov eax, r12d
 pop rbp
 pop r12
 pop r13
 ret
LABEL19:
 mov rax, qword [rsp + CONST]
 mov dword [rsp + CONST], CONST
 mov r13d, dword [rax + CONST]
 mov eax, dword [rip + CONST]
 mov edx, r13d
 test eax, eax
 cjmp LABEL68
 mov esi, CONST
 xor eax, eax
 mov dword [rsp + CONST], edi
 call CONST
 mov r12d, eax
 test eax, eax
 cjmp LABEL75
LABEL124:
 mov dword [rip + CONST], CONST
 jmp LABEL32
 mov eax, dword [rsp + CONST]
 cmp eax, CONST
 cjmp LABEL80
 add rax, qword [rsp + CONST]
LABEL135:
 mov edx, dword [rax]
 xor eax, eax
 call CONST
 mov r12d, eax
 jmp LABEL32
LABEL68:
 xor esi, esi
 xor eax, eax
 call CONST
 mov r12d, eax
 test eax, eax
 cjmp LABEL32
 cmp dword [rip + CONST], CONST
 cjmp LABEL32
LABEL133:
 xor eax, eax
 mov esi, CONST
 mov edi, r12d
 call CONST
 test eax, eax
 cjmp LABEL100
 or eax, CONST
 mov esi, CONST
 mov edi, r12d
 mov edx, eax
 xor eax, eax
 call CONST
 cmp eax, CONST
 cjmp LABEL32
LABEL100:
 call CONST
 mov edi, r12d
 or r12d, CONST
 mov r13d, dword [rax]
 mov rbp, rax
 call CONST
 mov dword [rbp], r13d
 jmp LABEL32
 xor eax, eax
 call CONST
 mov r12d, eax
 jmp LABEL32
LABEL75:
 call CONST
 mov edi, dword [rsp + CONST]
 cmp dword [rax], CONST
 cjmp LABEL124
 mov edx, r13d
 xor esi, esi
 xor eax, eax
 call CONST
 mov r12d, eax
 test eax, eax
 cjmp LABEL32
 mov dword [rip + CONST], CONST
 jmp LABEL133
LABEL80:
 mov rax, qword [rsp + CONST]
 jmp LABEL135
LABEL26:
 mov rax, qword [rsp + CONST]
 jmp LABEL137
LABEL55:
 call CONST
