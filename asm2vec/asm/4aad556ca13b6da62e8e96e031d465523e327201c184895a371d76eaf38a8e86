 .name fcn.0000cfb0
 .offset 000000000000cfb0
 .file curl
 push r15
 push r14
 mov r14, rdi
 push r13
 push r12
 push rbp
 push rbx
 sub rsp, CONST
 mov r15, qword [rdi + CONST]
 cmp byte [r15], CONST
 cjmp LABEL10
LABEL136:
 lea rsi, [rip + CONST]
 mov rdi, r15
 mov r12d, CONST
 call CONST
 mov rbp, rax
LABEL135:
 lea rbx, [rip + CONST]
 lea rdx, [rip + CONST]
 lea r13, [rip + CONST]
 test rbp, rbp
 cjmp LABEL20
 nop dword [rax]
LABEL29:
 mov rsi, r13
 mov rdi, rbp
 xor eax, eax
 add rbx, CONST
 call CONST
 mov rdx, qword [rbx + CONST]
 test rdx, rdx
 cjmp LABEL29
 mov rax, qword [rip + CONST]
 test rax, rax
 cjmp LABEL32
 mov rbx, qword [rax]
 test rbx, rbx
 cjmp LABEL32
 lea r13, [rip + CONST]
 nop dword [rax]
LABEL45:
 mov rdx, qword [rbx]
 mov rsi, r13
 mov rdi, rbp
 xor eax, eax
 call CONST
 mov rbx, qword [rbx + CONST]
 test rbx, rbx
 cjmp LABEL45
LABEL32:
 cmp qword [rip + CONST], CONST
 cjmp LABEL47
 lea rsi, [rip + CONST]
 mov rdi, rbp
 xor eax, eax
 call CONST
 mov rax, qword [rip + CONST]
 mov rbx, qword [rax]
 test rbx, rbx
 cjmp LABEL47
 lea r13, [rip + CONST]
 nop word [rax + rax]
LABEL65:
 mov rdx, qword [rbx]
 mov rsi, r13
 mov rdi, rbp
 xor eax, eax
 call CONST
 mov rbx, qword [rbx + CONST]
 test rbx, rbx
 cjmp LABEL65
LABEL47:
 lea rsi, [rip + CONST]
 mov rdi, rbp
 xor eax, eax
 call CONST
 mov rax, qword [rip + CONST]
 test rax, rax
 cjmp LABEL72
 mov rbx, qword [rax]
 test rbx, rbx
 cjmp LABEL72
 lea r13, [rip + CONST]
 jmp LABEL77
LABEL87:
 lea rsi, [rip + CONST]
 mov rdi, rbp
 xor eax, eax
 call CONST
 mov rbx, qword [rbx + CONST]
 test rbx, rbx
 cjmp LABEL72
LABEL77:
 mov rdx, qword [rbx]
 cmp byte [rdx], CONST
 cjmp LABEL87
 mov rsi, r13
 mov rdi, rbp
 xor eax, eax
 call CONST
 mov rbx, qword [rbx + CONST]
 test rbx, rbx
 cjmp LABEL77
LABEL72:
 mov rax, qword [rip + CONST]
 test rax, rax
 cjmp LABEL97
 mov rbx, qword [rax]
 test rbx, rbx
 cjmp LABEL97
 lea r13, [rip + CONST]
 nop dword [rax + rax]
LABEL110:
 mov rdx, qword [rbx]
 mov rsi, r13
 mov rdi, rbp
 xor eax, eax
 call CONST
 mov rbx, qword [rbx + CONST]
 test rbx, rbx
 cjmp LABEL110
LABEL97:
 lea rbx, [rip + CONST]
 lea rdx, [rip + CONST]
 lea r13, [rip + CONST]
LABEL121:
 mov rsi, r13
 mov rdi, rbp
 xor eax, eax
 add rbx, CONST
 call CONST
 mov rdx, qword [rbx]
 test rdx, rdx
 cjmp LABEL121
 test r12b, r12b
 cjmp LABEL123
LABEL139:
 add rsp, CONST
 pop rbx
 pop rbp
 pop r12
 pop r13
 pop r14
 pop r15
 jmp CONST
LABEL10:
 xor r12d, r12d
 cmp byte [r15 + CONST], CONST
 mov rbp, qword [rip + CONST]
 cjmp LABEL135
 jmp LABEL136
LABEL123:
 mov rdi, rbp
 call CONST
 jmp LABEL139
LABEL20:
 mov rdx, r15
 lea rsi, [rip + CONST]
 mov rdi, r14
 xor eax, eax
 call CONST
 jmp LABEL139
