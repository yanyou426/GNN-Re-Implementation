 .name fcn.0001d850
 .offset 000000000001d850
 .file cvtsudoers
 push r15
 push r14
 push r13
 push r12
 mov r12, rdx
 mov edx, CONST
 push rbp
 mov rbp, rdi
 lea rdi, [rip + CONST]
 push rbx
 sub rsp, CONST
 mov qword [rsp + CONST], rsi
 lea rsi, [rip + CONST]
 mov qword [rsp + CONST], rcx
 mov rax, qword fs:[CONST]
 mov qword [rsp + CONST], rax
 xor eax, eax
 lea rax, [rip + CONST]
 mov dword [rsp + CONST], CONST
 mov r14d, dword [rax + CONST]
 mov ecx, r14d
 call CONST
 mov rdi, rbp
 call CONST
 cmp byte [rbp + rax + CONST], CONST
 cjmp LABEL25
 mov esi, CONST
 mov rdi, rbp
 call CONST
 test rax, rax
 cjmp LABEL25
 lea r13, [rax + CONST]
 lea rsi, [rip + CONST]
 mov rdi, r13
 call CONST
 test rax, rax
 cjmp LABEL36
LABEL25:
 test r12, r12
 cjmp LABEL38
 mov r9, r12
 mov ecx, CONST
 mov edx, CONST
 xor eax, eax
 lea rbx, [rsp + CONST]
 sub rsp, CONST
 mov esi, CONST
 push rbp
 lea r8, [rip + CONST]
 mov rdi, rbx
 call CONST
 pop r8
 pop r9
 cmp eax, CONST
 cjmp LABEL53
 mov rdi, r12
 mov rbp, rbx
 call CONST
 mov qword [rsp + CONST], rax
LABEL167:
 lea rax, [rsp + CONST]
 xor edx, edx
 mov esi, CONST
 mov rdi, rbp
 mov rcx, rax
 mov qword [rsp], rax
 call CONST
 test eax, eax
 cjmp LABEL66
 cmp qword [rsp + CONST], CONST
 cjmp LABEL66
 lea r13, [rip + CONST]
 mov rbx, qword [rsp + CONST]
 mov rax, qword [r13 + CONST]
 mov r15, qword [rbx]
 cmp byte [rax], CONST
 cjmp LABEL74
LABEL355:
 test r15, r15
 cjmp LABEL76
 lea rax, [rsp + CONST]
 mov dword [rsp + CONST], r14d
 mov r14, r15
 mov r15, qword [rsp + CONST]
 mov qword [rsp + CONST], rbp
 mov rbp, qword [rsp + CONST]
 mov qword [rsp + CONST], rax
 jmp LABEL84
LABEL128:
 mov esi, CONST
 mov rdi, r14
 call CONST
 mov rdi, qword [r13 + CONST]
 test rax, rax
 lea rsi, [rax + CONST]
 cmove rsi, r14
 call CONST
 test eax, eax
 cjmp LABEL94
 mov rcx, qword [rsp + CONST]
 mov rdx, r15
 mov rsi, r12
 mov rdi, r14
 call CONST
 test al, al
 cjmp LABEL94
 mov edi, dword [rsp + CONST]
 lea rcx, [rsp + CONST]
 mov rdx, r12
 mov rsi, r14
 call CONST
 test al, al
 cjmp LABEL94
 mov rax, qword [r13 + CONST]
 test rax, rax
 cjmp LABEL111
 mov rdx, qword [rsp + CONST]
 cmp qword [rax], rdx
 cjmp LABEL114
LABEL94:
 mov r14, qword [rbx + CONST]
 add rbx, CONST
 test r14, r14
 cjmp LABEL118
LABEL84:
 mov edi, dword [rsp + CONST]
 cmp edi, CONST
 cjmp LABEL121
 call CONST
 mov dword [rsp + CONST], CONST
LABEL121:
 add r14, rbp
 mov rdi, r14
 call CONST
 cmp byte [r14 + rax + CONST], CONST
 cjmp LABEL128
 mov rcx, r15
 mov rdx, r12
 mov rsi, rax
 mov rdi, r14
 call CONST
 test al, al
 cjmp LABEL94
 mov r14d, dword [rsp + CONST]
 mov r8d, CONST
 mov edx, CONST
 lea rsi, [rip + CONST]
 lea rdi, [rip + CONST]
 mov byte [rsp], al
 mov ecx, r14d
 call CONST
 movzx eax, byte [rsp]
 jmp LABEL145
LABEL66:
 mov rdi, qword [rsp]
 call CONST
 xor r8d, r8d
 mov ecx, r14d
 mov edx, CONST
 lea rsi, [rip + CONST]
 lea rdi, [rip + CONST]
 call CONST
 xor eax, eax
LABEL145:
 mov rbx, qword [rsp + CONST]
 sub rbx, qword fs:[CONST]
 cjmp LABEL157
 add rsp, CONST
 pop rbx
 pop rbp
 pop r12
 pop r13
 pop r14
 pop r15
 ret
LABEL38:
 mov qword [rsp + CONST], CONST
 jmp LABEL167
LABEL36:
 lea rax, [rip + CONST]
 mov rsi, r13
 mov rdi, qword [rax + CONST]
 call CONST
 test eax, eax
 cjmp LABEL25
 xor r8d, r8d
 mov ecx, r14d
 mov edx, CONST
 lea rsi, [rip + CONST]
 lea rdi, [rip + CONST]
 call CONST
 xor eax, eax
 jmp LABEL145
LABEL118:
 mov r14d, dword [rsp + CONST]
LABEL76:
 mov rdi, qword [rsp]
 call CONST
LABEL272:
 mov edi, dword [rsp + CONST]
 cmp edi, CONST
 cjmp LABEL187
 call CONST
LABEL187:
 xor r8d, r8d
 mov ecx, r14d
 mov edx, CONST
 lea rsi, [rip + CONST]
 lea rdi, [rip + CONST]
 call CONST
 xor eax, eax
 jmp LABEL145
LABEL74:
 test r15, r15
 cjmp LABEL76
 lea rax, [rsp + CONST]
 mov dword [rsp + CONST], r14d
 mov r14, qword [rsp + CONST]
 mov qword [rsp + CONST], rbp
 mov rbp, qword [rsp + CONST]
 mov byte [rsp + CONST], CONST
 mov qword [rsp + CONST], rax
 jmp LABEL206
LABEL256:
 mov byte [rsp + CONST], r9b
 nop dword [rax]
LABEL223:
 mov r15, qword [rbx + CONST]
 add rbx, CONST
 test r15, r15
 cjmp LABEL212
LABEL206:
 mov edi, dword [rsp + CONST]
 cmp edi, CONST
 cjmp LABEL215
 call CONST
 mov dword [rsp + CONST], CONST
LABEL215:
 add r15, rbp
 mov rsi, qword [r13 + CONST]
 mov rdi, r15
 call CONST
 test eax, eax
 cjmp LABEL223
 mov rcx, qword [rsp + CONST]
 mov rdx, r14
 mov rsi, r12
 mov rdi, r15
 call CONST
 test al, al
 cjmp LABEL223
 mov edi, dword [rsp + CONST]
 lea rcx, [rsp + CONST]
 mov rdx, r12
 mov rsi, r15
 call CONST
 mov r9d, eax
 test al, al
 cjmp LABEL223
 mov rax, qword [r13 + CONST]
 test rax, rax
 cjmp LABEL241
 mov rdx, qword [rsp + CONST]
 cmp qword [rax], rdx
 cjmp LABEL244
 mov rdx, qword [rsp + CONST]
 cmp qword [rax + CONST], rdx
 cjmp LABEL244
LABEL241:
 mov edi, dword [rsp + CONST]
 mov rcx, r14
 mov rdx, r12
 mov rsi, r15
 mov byte [rsp + CONST], r9b
 call CONST
 movzx r9d, byte [rsp + CONST]
 test al, al
 cjmp LABEL256
 mov rdi, qword [r13 + CONST]
 mov r14d, dword [rsp + CONST]
 mov rbp, qword [rsp + CONST]
 call CONST
 mov rdi, r15
 call CONST
 mov qword [r13 + CONST], rax
 test rax, rax
 cjmp LABEL265
LABEL313:
 mov rdi, qword [rsp]
 call CONST
 mov rsi, qword [rsp + CONST]
 mov rdi, rbp
 call CONST
 test al, al
 cjmp LABEL272
 mov edi, dword [rsp + CONST]
 mov byte [rsp], al
 call CONST
 mov r8d, CONST
 mov ecx, r14d
 mov edx, CONST
 lea rsi, [rip + CONST]
 lea rdi, [rip + CONST]
 call CONST
 movzx eax, byte [rsp]
 jmp LABEL145
LABEL53:
 call CONST
 xor r8d, r8d
 mov ecx, r14d
 mov edx, CONST
 mov dword [rax], CONST
 lea rsi, [rip + CONST]
 lea rdi, [rip + CONST]
 call CONST
 xor eax, eax
 jmp LABEL145
LABEL114:
 mov rdx, qword [rsp + CONST]
 cmp qword [rax + CONST], rdx
 cjmp LABEL94
LABEL111:
 mov edi, dword [rsp + CONST]
 mov rcx, r15
 mov rdx, r12
 mov rsi, r14
 call CONST
 test al, al
 cjmp LABEL94
 mov rdi, qword [r13 + CONST]
 mov r15, r14
 mov rbp, qword [rsp + CONST]
 mov r14d, dword [rsp + CONST]
 call CONST
 mov rdi, r15
 call CONST
 mov qword [r13 + CONST], rax
 test rax, rax
 cjmp LABEL313
 lea rsi, [rip + CONST]
 lea rdi, [rip + CONST]
 call CONST
 lea rsi, [rip + CONST]
 lea rdi, [rip + CONST]
 mov rbx, rax
 call CONST
 mov ecx, r14d
 mov edx, CONST
 lea r9, [rip + CONST]
 push rsi
 mov r8, rax
 or ecx, CONST
 push rbx
LABEL373:
 mov rdi, r9
 lea rsi, [rip + CONST]
 xor eax, eax
 call CONST
 lea rsi, [rip + CONST]
 lea rdi, [rip + CONST]
 call CONST
 lea rsi, [rip + CONST]
 lea rdi, [rip + CONST]
 mov r12, rax
 call CONST
 mov rdx, r12
 lea rsi, [rip + CONST]
 mov rdi, rax
 xor eax, eax
 call CONST
 mov rdi, qword [rsp + CONST]
 call CONST
 pop rax
 pop rdx
 jmp LABEL272
LABEL212:
 cmp byte [rsp + CONST], CONST
 mov r14d, dword [rsp + CONST]
 mov rbp, qword [rsp + CONST]
 cjmp LABEL76
 mov rbx, qword [rsp + CONST]
 mov r15, qword [rbx]
 jmp LABEL355
LABEL244:
 mov r14d, dword [rsp + CONST]
 jmp LABEL76
LABEL157:
 call CONST
LABEL265:
 lea rsi, [rip + CONST]
 lea rdi, [rip + CONST]
 call CONST
 lea rdi, [rip + CONST]
 lea rsi, [rip + CONST]
 mov rbx, rax
 call CONST
 mov ecx, r14d
 mov edx, CONST
 lea r9, [rip + CONST]
 push rdi
 mov r8, rax
 or ecx, CONST
 push rbx
 jmp LABEL373
