 .name main
 .offset 0000000000002550
 .file sfconv
 push r15
 push r14
 mov r14d, edi
 push r13
 push r12
 push rbp
 push rbx
 sub rsp, CONST
 cmp edi, CONST
 setle r15b
 sub r14d, CONST
 cjmp LABEL11
 mov dword [rsp + CONST], CONST
 mov ebp, edi
 mov r13, rsi
 mov byte [rsp + CONST], CONST
 mov qword [rsp + CONST], CONST
 mov qword [rsp + CONST], CONST
 mov qword [rsp], CONST
 mov byte [rsp + CONST], r15b
 jmp LABEL20
LABEL30:
 mov byte [rsp + CONST], CONST
 mov r13, rbx
 mov ebp, r14d
LABEL53:
 mov r14d, ebp
 sub r14d, CONST
 cjmp LABEL26
LABEL20:
 mov r12, qword [r13 + CONST]
 lea rbx, [r13 + CONST]
 cmp byte [r12], CONST
 cjmp LABEL30
 lea r15, [r12 + CONST]
 mov rdi, r15
 call CONST
 cmp rax, CONST
 cjmp LABEL35
 mov ecx, CONST
 mov rsi, r15
 lea rdi, [rip + CONST]
 repe cmpsb byte [rsi], byte [rdi]
 seta al
 sbb al, CONST
 test al, al
 cjmp LABEL43
 cmp byte [r12 + CONST], CONST
 cjmp LABEL45
 cmp byte [r15 + CONST], CONST
 cjmp LABEL45
 cmp byte [r15 + CONST], CONST
 cjmp LABEL45
 mov byte [rsp + CONST], CONST
 mov r13, rbx
 mov ebp, r14d
 jmp LABEL53
LABEL35:
 movzx eax, byte [r12 + CONST]
 sub eax, CONST
 cmp al, CONST
 cjmp LABEL57
 lea rdx, [rip + CONST]
 movzx eax, al
 movsxd rax, dword [rdx + rax*CONST]
 add rax, rdx
 jmp rax
LABEL45:
 lea rsi, [rip + CONST]
 mov rdi, r15
 call CONST
 test eax, eax
 cjmp LABEL67
 lea rsi, [rip + CONST]
 mov rdi, r15
 call CONST
 test eax, eax
 cjmp LABEL72
 mov byte [rip + CONST], CONST
LABEL57:
 mov r13, rbx
 mov ebp, r14d
 jmp LABEL53
LABEL43:
 mov ebp, r14d
 mov byte [rsp + CONST], CONST
 mov r13, rbx
 mov r14d, ebp
 sub r14d, CONST
 cjmp LABEL20
 nop dword [rax + rax]
LABEL26:
 movzx r15d, byte [rsp + CONST]
 test r15b, r15b
 cjmp LABEL11
 mov eax, dword [rip + CONST]
 test eax, eax
 cjmp LABEL11
 sub eax, CONST
 movsx ebx, byte [rsp + CONST]
 cjmp LABEL92
 mov dword [rip + CONST], ebx
 mov dword [rip + CONST], CONST
LABEL125:
 mov rdi, qword [rsp]
 call CONST
 test al, al
 cjmp LABEL98
 mov rsi, qword [rsp + CONST]
 mov rdi, qword [rsp + CONST]
 call CONST
 jmp LABEL102
LABEL11:
 mov rdi, qword [rip + CONST]
 lea rdx, [rip + CONST]
 mov esi, CONST
 xor eax, eax
 mov r14d, CONST
 call CONST
LABEL102:
 add rsp, CONST
 mov eax, r14d
 pop rbx
 pop rbp
 pop r12
 pop r13
 pop r14
 pop r15
 ret
LABEL67:
 mov byte [rsp + CONST], CONST
 mov r13, rbx
 mov ebp, r14d
 jmp LABEL53
LABEL92:
 mov dword [rip + CONST], CONST
 add ebx, dword [rsp + CONST]
 mov dword [rip + CONST], ebx
 jmp LABEL125
LABEL72:
 lea rsi, [rip + CONST]
 mov rdi, r15
 call CONST
 test eax, eax
 cjmp LABEL130
 mov dword [rip + CONST], CONST
 mov r13, rbx
 mov ebp, r14d
 jmp LABEL53
 cmp qword [rsp], CONST
 lea rdx, [rip + CONST]
 cjmp LABEL137
LABEL148:
 mov rdi, qword [rip + CONST]
 xor eax, eax
 mov r13, rbx
 mov ebp, r14d
 mov esi, CONST
 call CONST
 mov byte [rsp + CONST], CONST
 jmp LABEL53
 cmp qword [rip + CONST], CONST
 lea rdx, [rip + CONST]
 cjmp LABEL148
 mov rax, qword [r13 + CONST]
 sub ebp, CONST
 add r13, CONST
 mov qword [rip + CONST], rax
 jmp LABEL53
 cmp qword [rsp + CONST], CONST
 cjmp LABEL155
 lea rdx, [rip + CONST]
 jmp LABEL148
 cmp qword [rsp + CONST], CONST
 lea rdx, [rip + CONST]
 cjmp LABEL148
 mov rax, qword [r13 + CONST]
 sub ebp, CONST
 add r13, CONST
 mov qword [rsp + CONST], rax
 jmp LABEL53
LABEL137:
 mov rax, qword [r13 + CONST]
 sub ebp, CONST
 add r13, CONST
 mov qword [rsp], rax
 jmp LABEL53
LABEL155:
 mov rax, qword [r13 + CONST]
 sub ebp, CONST
 add r13, CONST
 mov qword [rsp + CONST], rax
 jmp LABEL53
LABEL130:
 lea rsi, [rip + CONST]
 mov rdi, r15
 call CONST
 test eax, eax
 cjmp LABEL180
 lea rsi, [rip + CONST]
 mov rdi, r15
 call CONST
 test eax, eax
 cjmp LABEL185
 lea rsi, [rip + CONST]
 mov rdi, r15
 call CONST
 test eax, eax
 cjmp LABEL190
 mov dword [rsp + CONST], CONST
 mov r13, rbx
 mov ebp, r14d
 jmp LABEL53
LABEL180:
 mov dword [rip + CONST], CONST
 mov r13, rbx
 mov ebp, r14d
 jmp LABEL53
LABEL185:
 mov dword [rsp + CONST], CONST
 mov r13, rbx
 mov ebp, r14d
 jmp LABEL53
LABEL190:
 mov rdi, qword [rip + CONST]
 mov rcx, r12
 mov esi, CONST
 xor eax, eax
 lea rdx, [rip + CONST]
 call CONST
 jmp LABEL30
LABEL98:
 mov edi, CONST
 call CONST
