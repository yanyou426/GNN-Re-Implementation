 .name fcn.0001fc00
 .offset 000000000001fc00
 .file cvtsudoers
 push r15
 push r14
 push r13
 mov r13, rdi
 lea rdi, [rip + CONST]
 push r12
 push rbp
 mov rbp, r8
 push rbx
 mov rbx, rcx
 sub rsp, CONST
 mov dword [rsp + CONST], esi
 lea rsi, [rip + CONST]
 mov dword [rsp + CONST], edx
 mov edx, CONST
 mov rax, qword fs:[CONST]
 mov qword [rsp + CONST], rax
 lea rax, [rip + CONST]
 mov eax, dword [rax + CONST]
 mov ecx, eax
 mov dword [rsp + CONST], eax
 call CONST
 cmp qword [rip + CONST], CONST
 cjmp LABEL23
 cmp qword [rip + CONST], CONST
 cjmp LABEL25
LABEL204:
 test rbx, rbx
 mov ecx, dword [rsp + CONST]
 lea rax, [rip + CONST]
 lea r9, [rip + CONST]
 cmove rbx, rax
 test rbp, rbp
 mov rdi, r9
 mov edx, CONST
 lea rax, [rip + CONST]
 lea rsi, [rip + CONST]
 cmove rbp, rax
 sub rsp, CONST
 or ecx, CONST
 xor r12d, r12d
 lea r8, [rip + CONST]
 push rbp
 push rbx
 mov eax, dword [rsp + CONST]
 push rax
 mov eax, dword [rsp + CONST]
 push rax
 xor eax, eax
 push r13
 call CONST
 add rsp, CONST
 mov rdi, r13
 call CONST
 mov rdi, rbx
 mov r14, rax
 call CONST
 mov rdi, rbp
 mov r15, rax
 mov qword [rsp + CONST], rax
 call CONST
 mov rsi, rax
 mov qword [rsp + CONST], rax
 lea rax, [r14 + r15 + CONST]
 add rax, rsi
 mov qword [rsp + CONST], rax
 lea rax, [r14 + CONST]
 mov qword [rsp + CONST], rax
LABEL136:
 mov rsi, qword [rsp + CONST]
 mov edi, CONST
 call CONST
 mov r15, rax
 test rax, rax
 cjmp LABEL72
 mov eax, dword [rsp + CONST]
 lea rcx, [r15 + CONST]
 mov r14, qword [rsp + CONST]
 mov rsi, r13
 mov qword [r15 + CONST], rcx
 mov rdi, rcx
 add r12d, CONST
 mov dword [r15 + CONST], eax
 mov eax, dword [rsp + CONST]
 mov rdx, r14
 mov dword [r15 + CONST], eax
 call CONST
 mov rsi, rbx
 mov rcx, rax
 mov eax, CONST
 add rcx, r14
 mov qword [r15 + CONST], rcx
 mov word [rcx], ax
 mov rax, qword [r15 + CONST]
 lea rdx, [rax + CONST]
 mov qword [r15 + CONST], rdx
 mov byte [rax + CONST], CONST
 mov rax, qword [r15 + CONST]
 lea rdi, [rax + CONST]
 mov rax, qword [rsp + CONST]
 mov qword [r15 + CONST], rdi
 lea r14, [rax + CONST]
 mov rdx, r14
 call CONST
 mov rdi, qword [r15 + CONST]
 mov rax, qword [rsp + CONST]
 mov rsi, rbp
 add rdi, r14
 lea rdx, [rax + CONST]
 mov r14, r15
 mov qword [r15 + CONST], rdi
 call CONST
 lea rax, [r15 + CONST]
 mov dword [r15], CONST
 mov qword [r15 + CONST], rax
 cmp r12d, CONST
 cjmp LABEL114
 mov rax, qword [r15 + CONST]
 mov byte [r15 + CONST], CONST
 lea rdx, [rsp + CONST]
 mov rsi, r15
 mov rdi, qword [rip + CONST]
 mov qword [r15 + CONST], rax
 call CONST
 cmp eax, CONST
 cjmp LABEL123
 cmp eax, CONST
 cjmp LABEL125
 mov rax, qword [rsp + CONST]
 mov r8, qword [rax + CONST]
 cmp qword [r8 + CONST], CONST
 cjmp LABEL129
LABEL171:
 mov rdi, r15
 mov qword [rsp + CONST], r8
 call CONST
 mov r8, qword [rsp + CONST]
 mov r14, r8
LABEL125:
 cmp r12d, CONST
 cjmp LABEL136
 add dword [r14], CONST
 mov r15, qword [r14 + CONST]
 mov edx, CONST
 lea rsi, [rip + CONST]
 mov ecx, dword [rsp + CONST]
 lea rdi, [rip + CONST]
 mov r8, r15
 call CONST
LABEL245:
 mov rax, qword [rsp + CONST]
 sub rax, qword fs:[CONST]
 cjmp LABEL147
 add rsp, CONST
 mov rax, r15
 pop rbx
 pop rbp
 pop r12
 pop r13
 pop r14
 pop r15
 ret
LABEL114:
 mov eax, dword [r15 + CONST]
 mov byte [r15 + CONST], CONST
 lea rdx, [rsp + CONST]
 mov rsi, r15
 mov rdi, qword [rip + CONST]
 mov dword [r15 + CONST], eax
 call CONST
 cmp eax, CONST
 cjmp LABEL123
 cmp eax, CONST
 cjmp LABEL136
 mov rax, qword [rsp + CONST]
 mov r8, qword [rax + CONST]
 cmp qword [r8 + CONST], CONST
 cjmp LABEL171
LABEL129:
 mov rdi, r8
 call CONST
 mov rax, qword [rsp + CONST]
 mov qword [rax + CONST], r15
 jmp LABEL125
LABEL123:
 lea rsi, [rip + CONST]
 lea rdi, [rip + CONST]
 call CONST
 mov ecx, dword [rsp + CONST]
 mov r9, r13
 mov edx, CONST
 mov r8, rax
 lea rsi, [rip + CONST]
 lea rdi, [rip + CONST]
 xor eax, eax
 or ecx, CONST
 call CONST
 lea rsi, [rip + CONST]
 lea rdi, [rip + CONST]
 call CONST
 mov rsi, r13
 mov rdi, rax
 xor eax, eax
 call CONST
 mov dword [r15], CONST
 jmp LABEL125
LABEL23:
 lea rdi, [rip + CONST]
 call CONST
 cmp qword [rip + CONST], CONST
 mov qword [rip + CONST], rax
 cjmp LABEL25
 cmp qword [rip + CONST], CONST
 cjmp LABEL204
LABEL250:
 lea rsi, [rip + CONST]
 lea rdi, [rip + CONST]
 xor r15d, r15d
 call CONST
 lea rsi, [rip + CONST]
 lea rdi, [rip + CONST]
 mov rbx, rax
 call CONST
 mov r14d, dword [rsp + CONST]
 sub rsp, CONST
 lea r9, [rip + CONST]
 push rbx
 mov r8, rax
 mov rdi, r9
 mov edx, CONST
 mov ecx, r14d
 lea rsi, [rip + CONST]
 xor eax, eax
 or ecx, CONST
 call CONST
 lea rsi, [rip + CONST]
 lea rdi, [rip + CONST]
 call CONST
 lea rsi, [rip + CONST]
 lea rdi, [rip + CONST]
 mov r12, rax
 call CONST
 mov rdx, r12
 lea rsi, [rip + CONST]
 mov rdi, rax
 xor eax, eax
 call CONST
 mov ecx, r14d
 mov edx, CONST
 xor r8d, r8d
 lea rsi, [rip + CONST]
 lea rdi, [rip + CONST]
 call CONST
 pop rdx
 pop rcx
 jmp LABEL245
LABEL25:
 lea rdi, [rip + CONST]
 call CONST
 cmp qword [rip + CONST], CONST
 mov qword [rip + CONST], rax
 cjmp LABEL250
 test rax, rax
 cjmp LABEL204
 jmp LABEL250
LABEL72:
 lea rsi, [rip + CONST]
 lea rdi, [rip + CONST]
 call CONST
 mov ebx, dword [rsp + CONST]
 mov r9, r13
 mov edx, CONST
 mov r8, rax
 lea rsi, [rip + CONST]
 xor eax, eax
 mov ecx, ebx
 lea rdi, [rip + CONST]
 or ecx, CONST
 call CONST
 lea rsi, [rip + CONST]
 lea rdi, [rip + CONST]
 call CONST
 mov rsi, r13
 mov rdi, rax
 xor eax, eax
 call CONST
 xor r8d, r8d
 mov ecx, ebx
 mov edx, CONST
 lea rsi, [rip + CONST]
 lea rdi, [rip + CONST]
 call CONST
 jmp LABEL245
LABEL147:
 call CONST
