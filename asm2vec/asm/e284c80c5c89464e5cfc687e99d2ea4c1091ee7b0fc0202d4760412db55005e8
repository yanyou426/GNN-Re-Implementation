 .name fcn.00004500
 .offset 0000000000004500
 .file weave
 movsxd rax, dword [rip + CONST]
 lea rdx, [rip + CONST]
 mov rdi, rax
 add rax, rdx
 test edi, edi
 cjmp LABEL5
 jmp LABEL6
LABEL15:
 sub rax, CONST
 test edi, edi
 cjmp LABEL6
LABEL5:
 movzx edx, byte [rax]
 cmp dl, CONST
 cjmp LABEL12
 sub edi, CONST
 cmp dl, CONST
 cjmp LABEL15
 cmp byte [rax + CONST], CONST
 cjmp LABEL15
 movzx edi, dil
 mov edx, CONST
 mov esi, CONST
 jmp CONST
LABEL6:
 push r12
 mov rsi, qword [rip + CONST]
 mov edi, CONST
 push rbp
 push rbx
 call CONST
 movsxd r8, dword [rip + CONST]
 xor eax, eax
 mov rdi, qword [rip + CONST]
 lea rcx, [rip + CONST]
 lea rdx, [rip + CONST]
 mov esi, CONST
 call CONST
 mov rdi, qword [rip + CONST]
 mov esi, CONST
 xor eax, eax
 lea rcx, [rip + CONST]
 lea rdx, [rip + CONST]
 call CONST
 mov eax, dword [rip + CONST]
 cmp eax, CONST
 cjmp LABEL43
 lea rbx, [rip + CONST]
 lea ebp, [rax + CONST]
 lea rax, [rbx + CONST]
 lea r12, [rip + CONST]
 add rbp, rax
 nop dword [rax]
LABEL56:
 movzx eax, byte [rbx]
 mov rsi, qword [rip + CONST]
 add rbx, CONST
 movzx edi, byte [r12 + rax]
 call CONST
 cmp rbx, rbp
 cjmp LABEL56
LABEL43:
 mov rsi, qword [rip + CONST]
 mov edi, CONST
 call CONST
 cmp byte [rip + CONST], CONST
 cjmp LABEL61
 mov byte [rip + CONST], CONST
LABEL61:
 movzx eax, byte [rip + CONST]
 pop rbx
 mov edx, CONST
 mov esi, CONST
 pop rbp
 pop r12
 lea edi, [rax + CONST]
 movzx edi, dil
 jmp CONST
LABEL12:
 movzx edi, dil
 mov edx, CONST
 xor esi, esi
 jmp CONST
