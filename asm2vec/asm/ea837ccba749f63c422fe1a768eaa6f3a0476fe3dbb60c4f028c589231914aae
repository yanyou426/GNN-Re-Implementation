 .name fcn.00018050
 .offset 0000000000018050
 .file cvtsudoers
 push r15
 lea rsi, [rip + CONST]
 mov edx, CONST
 push r14
 push r13
 push r12
 mov r12, rdi
 lea rdi, [rip + CONST]
 push rbp
 push rbx
 sub rsp, CONST
 mov rax, qword fs:[CONST]
 mov qword [rsp + CONST], rax
 lea rax, [rip + CONST]
 mov r13d, dword [rax + CONST]
 mov ecx, r13d
 call CONST
 lea rsi, [rip + CONST]
 mov rdi, r12
 call CONST
 cmp rax, CONST
 cjmp LABEL21
 lea rdi, [rsp + CONST]
 mov ecx, CONST
 mov rdx, rax
 mov rsi, r12
 lea r14, [rsp + CONST]
 mov rbx, rax
 call CONST
 pxor xmm0, xmm0
 mov byte [rsp + rbx + CONST], CONST
 lea rcx, [rsp + CONST]
 movups xmmword [rsp + CONST], xmm0
 lea rdx, [rsp + CONST]
 mov rdi, rax
 lea rsi, [rip + CONST]
 mov qword [rsp + CONST], CONST
 movups xmmword [rsp + CONST], xmm0
 movups xmmword [rsp + CONST], xmm0
 push r14
 lea rax, [rsp + CONST]
 push rax
 xor eax, eax
 lea r9, [rsp + CONST]
 lea r8, [rsp + CONST]
 call CONST
 pop rdi
 pop r8
 mov r15d, eax
 cmp eax, CONST
 cjmp LABEL50
 lea ebx, [rax + rax + CONST]
 movsxd rbx, ebx
 add rbx, r12
 movzx ebp, byte [rbx]
 mov eax, ebp
 and eax, CONST
 cmp al, CONST
 cjmp LABEL58
LABEL141:
 cmp bpl, CONST
 cjmp LABEL60
 cjmp LABEL61
 test bpl, bpl
 cjmp LABEL63
 mov rdi, r14
 sub dword [rsp + CONST], CONST
 sub dword [rsp + CONST], CONST
 mov dword [rsp + CONST], CONST
 call CONST
 mov qword [rsp + CONST], rax
 mov r12, rax
LABEL121:
 mov r8, r12
 mov ecx, r13d
 mov edx, CONST
 lea rsi, [rip + CONST]
 lea rdi, [rip + CONST]
 call CONST
LABEL167:
 mov rax, qword [rsp + CONST]
 sub rax, qword fs:[CONST]
 cjmp LABEL79
 add rsp, CONST
 mov rax, r12
 pop rbx
 pop rbp
 pop r12
 pop r13
 pop r14
 pop r15
 ret
LABEL63:
 cmp bpl, CONST
 cjmp LABEL90
LABEL60:
 xor eax, eax
 lea rcx, [rsp + CONST]
 lea rdx, [rsp + CONST]
 mov dword [rsp + CONST], CONST
 lea rdi, [rbx + CONST]
 lea rsi, [rip + CONST]
 mov dword [rsp + CONST], CONST
 mov dword [rsp + CONST], CONST
 call CONST
 test eax, eax
 cjmp LABEL101
 cmp byte [rbx], CONST
 mov ebp, dword [rsp + CONST]
 mov edx, dword [rsp + CONST]
 cjmp LABEL105
 imul ebp, ebp, CONST
 add ebp, edx
 imul ebp, ebp, CONST
LABEL178:
 lea eax, [rax + rax + CONST]
 cdqe
 add rbx, rax
LABEL135:
 cmp byte [rbx], CONST
 cjmp LABEL113
 mov rdi, r14
 sub dword [rsp + CONST], CONST
 sub dword [rsp + CONST], CONST
 call CONST
 mov qword [rsp + CONST], rax
 mov r12, rax
 cmp rax, CONST
 cjmp LABEL121
 lea rdi, [rsp + CONST]
 movsxd rbp, ebp
 call CONST
 add rax, qword [rsp + CONST]
 sub rax, rbp
 mov qword [rsp + CONST], rax
 mov r12, rax
 jmp LABEL121
LABEL61:
 cmp bpl, CONST
 cjmp LABEL90
 mov dword [rsp + CONST], CONST
 add rbx, CONST
 xor ebp, ebp
 jmp LABEL135
LABEL58:
 call CONST
 movzx ecx, byte [rbx + CONST]
 mov r8, rax
 mov rdx, qword [r8]
 test byte [rdx + rcx*CONST + CONST], CONST
 cjmp LABEL141
 movsx eax, cl
 sub eax, CONST
 cmp r15d, CONST
 cjmp LABEL145
 cmp r15d, CONST
 cjmp LABEL147
LABEL171:
 movzx ebp, byte [rbx + CONST]
 add rbx, CONST
 jmp LABEL141
LABEL90:
 mov ecx, r13d
 mov r9, r12
 lea r8, [rip + CONST]
 xor eax, eax
 or ecx, CONST
 mov edx, CONST
 lea rsi, [rip + CONST]
 mov r12, CONST
 lea rdi, [rip + CONST]
 call CONST
 mov r8, CONST
 mov ecx, r13d
 mov edx, CONST
 lea rsi, [rip + CONST]
 lea rdi, [rip + CONST]
 call CONST
 jmp LABEL167
LABEL147:
 lea eax, [rax + rax*CONST]
 add eax, eax
 add dword [rsp + CONST], eax
 jmp LABEL171
LABEL105:
 mov ecx, ebp
 shl ecx, CONST
 sub ebp, ecx
 shl ebp, CONST
 sub ebp, edx
 imul ebp, ebp, CONST
 jmp LABEL178
LABEL145:
 lea eax, [rax + rax*CONST]
 add eax, eax
 add dword [rsp + CONST], eax
 jmp LABEL171
LABEL101:
 push rsi
 mov ecx, r13d
 lea r8, [rip + CONST]
 mov edx, CONST
 push rax
 or ecx, CONST
 mov r9, r12
 lea rsi, [rip + CONST]
 lea rdi, [rip + CONST]
 xor eax, eax
 call CONST
 or r8, CONST
 mov ecx, r13d
 mov edx, CONST
LABEL252:
 lea rsi, [rip + CONST]
 lea rdi, [rip + CONST]
 mov r12, CONST
 call CONST
 pop rax
 pop rdx
 jmp LABEL167
LABEL21:
 mov ecx, r13d
 mov r9, r12
 lea r8, [rip + CONST]
 xor eax, eax
 or ecx, CONST
 mov edx, CONST
 lea rsi, [rip + CONST]
 mov r12, CONST
 lea rdi, [rip + CONST]
 call CONST
 mov r8, CONST
 mov ecx, r13d
 mov edx, CONST
 lea rsi, [rip + CONST]
 lea rdi, [rip + CONST]
 call CONST
 jmp LABEL167
LABEL113:
 mov ecx, r13d
 mov r9, r12
 lea r8, [rip + CONST]
 xor eax, eax
 or ecx, CONST
 mov edx, CONST
 lea rsi, [rip + CONST]
 mov r12, CONST
 lea rdi, [rip + CONST]
 call CONST
 mov r8, CONST
 mov ecx, r13d
 mov edx, CONST
 lea rsi, [rip + CONST]
 lea rdi, [rip + CONST]
 call CONST
 jmp LABEL167
LABEL50:
 sub rsp, CONST
 mov ecx, r13d
 mov r9d, eax
 mov edx, CONST
 push r12
 or ecx, CONST
 lea r8, [rip + CONST]
 xor eax, eax
 lea rsi, [rip + CONST]
 lea rdi, [rip + CONST]
 call CONST
 mov r8, CONST
 mov ecx, r13d
 mov edx, CONST
 jmp LABEL252
LABEL79:
 call CONST
