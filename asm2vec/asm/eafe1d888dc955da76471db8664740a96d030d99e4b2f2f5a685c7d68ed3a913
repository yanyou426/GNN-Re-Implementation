 .name fcn.0001ab60
 .offset 000000000001ab60
 .file curl
 push r15
 push r14
 push r13
 push r12
 push rbp
 push rbx
 sub rsp, CONST
 mov r15, qword [rcx]
 mov rax, qword fs:[CONST]
 mov qword [rsp + CONST], rax
 xor eax, eax
 test r15, r15
 cjmp LABEL12
 mov r13, rdi
 mov r12, rsi
 mov rdi, r15
 mov esi, CONST
 mov r14d, edx
 mov rbx, rcx
 call CONST
 xor r8d, r8d
 mov rbp, rax
 test rax, rax
 cjmp LABEL23
LABEL37:
 mov rax, qword [rsp + CONST]
 sub rax, qword fs:[CONST]
 cjmp LABEL26
 add rsp, CONST
 mov eax, r8d
 pop rbx
 pop rbp
 pop r12
 pop r13
 pop r14
 pop r15
 ret
LABEL23:
 cmp byte [r15], CONST
 cjmp LABEL37
 mov rdi, r15
 mov esi, CONST
 call CONST
 mov ecx, CONST
 pxor xmm0, xmm0
 lea rdi, [rsp + CONST]
 mov r15, rax
 mov rax, rbp
 lea rbp, [rsp + CONST]
 mov esi, CONST
 rep stosq qword [rdi], rax
 mov rdi, rbp
 movups xmmword [rsp + CONST], xmm0
 call CONST
 test r15, r15
 cjmp LABEL53
 mov byte [r15], CONST
LABEL53:
 mov r8, qword [rbx]
 test r12, r12
 cjmp LABEL57
 test r14b, r14b
 cjmp LABEL57
 lea r14, [rsp + CONST]
 mov rcx, r13
 mov esi, CONST
 xor eax, eax
 lea rdx, [rip + CONST]
 mov rdi, r14
 call CONST
LABEL101:
 lea r12, [rsp + CONST]
 mov edx, CONST
 mov rdi, r14
 mov rsi, r12
 call CONST
 test r15, r15
 cjmp LABEL73
 mov byte [r15], CONST
LABEL73:
 mov rdx, qword [rbx]
 xor eax, eax
 mov rcx, r12
 lea rsi, [rip + CONST]
 mov rdi, rbp
 call CONST
 test eax, eax
 cjmp LABEL82
 mov rdi, qword [rbx]
 mov dword [rsp + CONST], eax
 call CONST
 mov rdi, rbp
 call CONST
 mov r8d, dword [rsp + CONST]
 mov qword [rbx], rax
 jmp LABEL37
LABEL12:
 xor r8d, r8d
 jmp LABEL37
LABEL57:
 lea r14, [rsp + CONST]
 lea r9, [r12 + CONST]
 mov rcx, r13
 xor eax, eax
 lea rdx, [rip + CONST]
 mov esi, CONST
 mov rdi, r14
 call CONST
 jmp LABEL101
LABEL82:
 mov r8d, CONST
 jmp LABEL37
LABEL26:
 call CONST
